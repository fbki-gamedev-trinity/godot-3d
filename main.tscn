[gd_scene load_steps=27 format=3 uid="uid://b6k0hfq7ohax4"]

[ext_resource type="Script" path="res://character_body_3d.gd" id="1_gcvvc"]
[ext_resource type="PackedScene" uid="uid://dcxmyjssapca4" path="res://dust.tscn" id="2_dgxi1"]
[ext_resource type="Script" path="res://ray_cast_3d.gd" id="3_ws0wr"]

[sub_resource type="CapsuleMesh" id="CapsuleMesh_5vp22"]

[sub_resource type="ConvexPolygonShape3D" id="ConvexPolygonShape3D_e4ycv"]
points = PackedVector3Array(-0.125207, -0.532801, -0.480507, 0.0227831, 0.47607, 0.498884, 0.169713, 0.559144, 0.464172, 0.231051, -0.803591, 0.320455, 0.40741, 0.651043, -0.243523, -0.482789, 0.594843, 0.0822132, -0.362868, -0.682312, 0.289697, 0.469044, -0.654529, -0.0662713, -0.127444, 0.842701, -0.338103, -0.393435, -0.683942, -0.244717, 0.438255, 0.623309, 0.200849, 0.0841477, 0.977454, 0.114795, -0.0682023, -0.976458, -0.12927, 0.20055, -0.563129, -0.451454, -0.185527, 0.595453, -0.453475, -0.273363, 0.592268, 0.407754, -0.00693649, -0.476823, 0.49966, 0.375821, -0.588614, 0.316955, 0.111579, 0.563059, -0.481177, -0.41725, 0.527866, -0.270497, -0.484546, -0.596972, -0.0665097, -0.279747, 0.908561, 0.0533361, -0.250197, -0.880712, 0.205319, 0.263647, -0.902771, -0.127394, 0.293368, 0.871526, -0.157196, 0.373412, -0.526319, -0.328246, 0.499663, 0.476641, -0.00688856, 0.0531056, 0.875001, 0.324703, -0.154543, -0.590854, 0.465879, -0.0972799, -0.782358, -0.398188, -0.387649, -0.498171, 0.31565, -0.30068, -0.587995, -0.388901)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_abe2w"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_gkq4i"]
height = 1512
invert = true
seamless = true
noise = SubResource("FastNoiseLite_abe2w")

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_imehi"]
sky_top_color = Color(0, 0.8645, 0.91, 1)
sky_horizon_color = Color(0.4216, 0.596853, 0.62, 1)
sky_curve = 0.713524
sky_cover = SubResource("NoiseTexture2D_gkq4i")
sky_cover_modulate = Color(0.724643, 0.724643, 0.724643, 1)
ground_bottom_color = Color(0.598202, 0.191018, 0.0511259, 1)
ground_horizon_color = Color(0.478199, 0.219642, 0.0310378, 1)

[sub_resource type="Sky" id="Sky_5avvk"]
sky_material = SubResource("ProceduralSkyMaterial_imehi")

[sub_resource type="Environment" id="Environment_ffs16"]
background_mode = 2
sky = SubResource("Sky_5avvk")
ambient_light_color = Color(0.43253, 0.73795, 0.933351, 1)
tonemap_mode = 2

[sub_resource type="CameraAttributesPractical" id="CameraAttributesPractical_5aqyj"]
dof_blur_far_enabled = true
dof_blur_far_distance = 50.37

[sub_resource type="BoxMesh" id="BoxMesh_vkrj5"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_kxn7t"]
albedo_color = Color(0.984382, 0.592287, 0.164055, 1)

[sub_resource type="BoxShape3D" id="BoxShape3D_68pom"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_ryhvt"]
albedo_color = Color(0.141176, 1, 1, 1)

[sub_resource type="Shader" id="Shader_sr1md"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.3.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform sampler2D texture_refraction : filter_linear_mipmap, repeat_enable;
uniform float refraction : hint_range(-1.0, 1.0, 0.001);
uniform vec4 refraction_texture_channel;
uniform sampler2D screen_texture : hint_screen_texture, repeat_disable, filter_linear_mipmap;

uniform sampler2D texture_normal : hint_roughness_normal, filter_linear_mipmap, repeat_enable;
uniform float normal_scale : hint_range(-16.0, 16.0);
varying vec3 uv1_triplanar_pos;

uniform float uv1_blend_sharpness : hint_range(0.0, 150.0, 0.001);
varying vec3 uv1_power_normal;

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

void vertex() {
	vec3 normal = MODEL_NORMAL_MATRIX * NORMAL;

	TANGENT = vec3(0.0, 0.0, -1.0) * abs(normal.x);
	TANGENT += vec3(1.0, 0.0, 0.0) * abs(normal.y);
	TANGENT += vec3(1.0, 0.0, 0.0) * abs(normal.z);
	TANGENT = inverse(MODEL_NORMAL_MATRIX) * normalize(TANGENT);

	BINORMAL = vec3(0.0, 1.0, 0.0) * abs(normal.x);
	BINORMAL += vec3(0.0, 0.0, -1.0) * abs(normal.y);
	BINORMAL += vec3(0.0, 1.0, 0.0) * abs(normal.z);
	BINORMAL = inverse(MODEL_NORMAL_MATRIX) * normalize(BINORMAL);

	// UV1 Triplanar: Enabled (with World Triplanar)
	uv1_power_normal = pow(abs(normal), vec3(uv1_blend_sharpness));
	uv1_triplanar_pos = (MODEL_MATRIX * vec4(VERTEX, 1.0)).xyz * uv1_scale + uv1_offset + TIME * 0.01;
	uv1_power_normal /= dot(uv1_power_normal, vec3(1.0));
	uv1_triplanar_pos *= vec3(1.0, -1.0, 1.0);
}

vec4 triplanar_texture(sampler2D p_sampler, vec3 p_weights, vec3 p_triplanar_pos) {
	vec4 samp = vec4(0.0);
	samp += texture(p_sampler, p_triplanar_pos.xy) * p_weights.z;
	samp += texture(p_sampler, p_triplanar_pos.xz) * p_weights.y;
	samp += texture(p_sampler, p_triplanar_pos.zy * vec2(-1.0, 1.0)) * p_weights.x;
	return samp;
}

void fragment() {
	vec4 albedo_tex = triplanar_texture(texture_albedo, uv1_power_normal, uv1_triplanar_pos);
	ALBEDO = albedo.rgb * albedo_tex.rgb;

	float metallic_tex = dot(triplanar_texture(texture_metallic, uv1_power_normal, uv1_triplanar_pos), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(triplanar_texture(texture_roughness, uv1_power_normal, uv1_triplanar_pos), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;

	// Normal Map: Enabled
	NORMAL_MAP = triplanar_texture(texture_normal, uv1_power_normal, uv1_triplanar_pos).rgb;
	NORMAL_MAP_DEPTH = normal_scale;

	// Refraction: Enabled (with normal map texture)
	vec3 unpacked_normal = NORMAL_MAP;
	unpacked_normal.xy = unpacked_normal.xy * 2.0 - 1.0;
	unpacked_normal.z = sqrt(max(0.0, 1.0 - dot(unpacked_normal.xy, unpacked_normal.xy)));
	vec3 ref_normal = normalize(mix(
			NORMAL,
			TANGENT * unpacked_normal.x + BINORMAL * unpacked_normal.y + NORMAL * unpacked_normal.z,
			NORMAL_MAP_DEPTH));
	vec2 ref_ofs = SCREEN_UV - ref_normal.xy * dot(triplanar_texture(texture_refraction, uv1_power_normal, uv1_triplanar_pos), refraction_texture_channel) * refraction;

	float ref_amount = 1.0 - albedo.a * albedo_tex.a;
	EMISSION += textureLod(screen_texture, ref_ofs, ROUGHNESS * 8.0).rgb * ref_amount * EXPOSURE;
	ALBEDO *= 1.0 - ref_amount;
	// Force transparency on the material (required for refraction).
	ALPHA = 1.0;
}
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_kxxb5"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_fgkkh"]
seamless = true
as_normal_map = true
noise = SubResource("FastNoiseLite_kxxb5")

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_trouu"]
seamless = true
as_normal_map = true
noise = SubResource("FastNoiseLite_kxxb5")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_dmm8e"]
render_priority = 0
shader = SubResource("Shader_sr1md")
shader_parameter/albedo = Color(0.413055, 0.8826, 1, 0.768627)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 0.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/refraction = 0.05
shader_parameter/refraction_texture_channel = null
shader_parameter/normal_scale = 1.0
shader_parameter/uv1_blend_sharpness = 1.0
shader_parameter/uv1_scale = Vector3(0.01, 0.025, 0.02)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_refraction = SubResource("NoiseTexture2D_trouu")
shader_parameter/texture_normal = SubResource("NoiseTexture2D_fgkkh")

[sub_resource type="BoxMesh" id="BoxMesh_27qas"]
material = SubResource("ShaderMaterial_dmm8e")
size = Vector3(5, 1, 5)

[sub_resource type="CylinderShape3D" id="CylinderShape3D_wtjke"]
height = 5.0
radius = 1.0

[sub_resource type="CylinderMesh" id="CylinderMesh_hmqeu"]
top_radius = 1.0
bottom_radius = 1.0
height = 1.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_585lj"]
blend_mode = 3
depth_draw_mode = 2
emission_enabled = true
emission = Color(1, 0, 1, 1)
emission_energy_multiplier = 16.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_pf08c"]
albedo_color = Color(0, 0, 0, 1)

[sub_resource type="TextMesh" id="TextMesh_3rjm6"]
material = SubResource("StandardMaterial3D_pf08c")
text = "Телепорт"
font_size = 127

[node name="Node3D" type="Node3D"]

[node name="CharacterBody3D" type="CharacterBody3D" parent="."]
unique_name_in_owner = true
collision_mask = 2
script = ExtResource("1_gcvvc")

[node name="MeshInstance3D" type="MeshInstance3D" parent="CharacterBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.13702, 0)
mesh = SubResource("CapsuleMesh_5vp22")

[node name="CollisionShape3D" type="CollisionShape3D" parent="CharacterBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.13702, 0)
shape = SubResource("ConvexPolygonShape3D_e4ycv")

[node name="Node3D" type="Node3D" parent="CharacterBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.68225, 0)

[node name="Camera3D" type="Camera3D" parent="CharacterBody3D/Node3D"]

[node name="CPUParticles3D" parent="CharacterBody3D" instance=ExtResource("2_dgxi1")]

[node name="RayCast3D" type="RayCast3D" parent="CharacterBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.65295, 0)
target_position = Vector3(0, 0, -100)
script = ExtResource("3_ws0wr")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_ffs16")
camera_attributes = SubResource("CameraAttributesPractical_5aqyj")

[node name="StaticBody3D" type="StaticBody3D" parent="."]
transform = Transform3D(13.7409, 0, 0, 0, 1, 0, 0, 0, 13.4819, 0, 0, 0)
collision_layer = 2

[node name="CSGMesh3D" type="CSGMesh3D" parent="StaticBody3D"]
transform = Transform3D(4.64856, 0, 0, 0, 0.0591656, 0, 0, 0, 4.39805, 0, 0, 0)
mesh = SubResource("BoxMesh_vkrj5")
material = SubResource("StandardMaterial3D_kxn7t")

[node name="CollisionShape3D" type="CollisionShape3D" parent="StaticBody3D"]
transform = Transform3D(4.64856, 0, 0, 0, 0.0591656, 0, 0, 0, 4.39805, 0, 0, 0)
shape = SubResource("BoxShape3D_68pom")

[node name="CSGBox3D" type="CSGBox3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 22.13, 2.43974, 2.214)
layers = 2
material_override = SubResource("StandardMaterial3D_ryhvt")
size = Vector3(4.62598, 4.82031, 5.42786)

[node name="CSGBox3D" type="CSGBox3D" parent="CSGBox3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -18.7475, -0.356261, -20.2487)
layers = 2
material_override = SubResource("StandardMaterial3D_ryhvt")
size = Vector3(4.62598, 4.82031, 5.42786)

[node name="CSGBox3D2" type="CSGBox3D" parent="."]
transform = Transform3D(2.96693, 0, 0, 0, 1.66522, 0, 0, 0, 4.00648, -14.0388, 2.53455, 4.428)
layers = 2
material_override = SubResource("StandardMaterial3D_ryhvt")
size = Vector3(4.62598, 4.82031, 5.42786)

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, -0.82806, 0.560639, 0, -0.560639, -0.82806, -13.1117, 49.0995, -54.7774)
shadow_enabled = true

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(2.15237, 0, 0, 0, 1, 0, 0, 0, 2.13499, 20.4354, -0.270551, 21.9725)
mesh = SubResource("BoxMesh_27qas")

[node name="Teleport" type="Area3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 10, 0, 1)

[node name="CollisionShape3D" type="CollisionShape3D" parent="Teleport"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 10, 0, -4)
shape = SubResource("CylinderShape3D_wtjke")

[node name="CSGMesh3D" type="CSGMesh3D" parent="Teleport"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 10, 0, -4)
mesh = SubResource("CylinderMesh_hmqeu")
material = SubResource("StandardMaterial3D_585lj")

[node name="CSGMesh3D2" type="CSGMesh3D" parent="Teleport"]
transform = Transform3D(-0.707107, 0, 0.707107, 0, 1, 0, -0.707107, 0, -0.707107, 10, 4, -4)
mesh = SubResource("TextMesh_3rjm6")

[node name="Teleport2" type="Area3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -12.007, 0, -13)

[node name="CollisionShape3D" type="CollisionShape3D" parent="Teleport2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 10, 0, -4)
shape = SubResource("CylinderShape3D_wtjke")

[node name="CSGMesh3D" type="CSGMesh3D" parent="Teleport2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 10, 0, -4)
mesh = SubResource("CylinderMesh_hmqeu")
material = SubResource("StandardMaterial3D_585lj")

[node name="CSGMesh3D2" type="CSGMesh3D" parent="Teleport2"]
transform = Transform3D(-0.707107, 0, 0.707107, 0, 1, 0, -0.707107, 0, -0.707107, 10, 4, -4)
mesh = SubResource("TextMesh_3rjm6")

[node name="Teleport5" type="Area3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -34, 0, -4)

[node name="CollisionShape3D" type="CollisionShape3D" parent="Teleport5"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 10, 0, -4)
shape = SubResource("CylinderShape3D_wtjke")

[node name="CSGMesh3D" type="CSGMesh3D" parent="Teleport5"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 10, 0, -4)
mesh = SubResource("CylinderMesh_hmqeu")
material = SubResource("StandardMaterial3D_585lj")

[node name="CSGMesh3D2" type="CSGMesh3D" parent="Teleport5"]
transform = Transform3D(-0.707107, 0, 0.707107, 0, 1, 0, -0.707107, 0, -0.707107, 10, 4, -4)
mesh = SubResource("TextMesh_3rjm6")

[node name="Teleport3" type="Area3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 3, 0, 23)

[node name="CollisionShape3D" type="CollisionShape3D" parent="Teleport3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 10, 0, -4)
shape = SubResource("CylinderShape3D_wtjke")

[node name="CSGMesh3D" type="CSGMesh3D" parent="Teleport3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 10, 0, -4)
mesh = SubResource("CylinderMesh_hmqeu")
material = SubResource("StandardMaterial3D_585lj")

[node name="CSGMesh3D2" type="CSGMesh3D" parent="Teleport3"]
transform = Transform3D(-0.707107, 0, 0.707107, 0, 1, 0, -0.707107, 0, -0.707107, 10, 4, -4)
mesh = SubResource("TextMesh_3rjm6")

[node name="Teleport4" type="Area3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -21, 0, 23)

[node name="CollisionShape3D" type="CollisionShape3D" parent="Teleport4"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 10, 0, -4)
shape = SubResource("CylinderShape3D_wtjke")

[node name="CSGMesh3D" type="CSGMesh3D" parent="Teleport4"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 10, 0, -4)
mesh = SubResource("CylinderMesh_hmqeu")
material = SubResource("StandardMaterial3D_585lj")

[node name="CSGMesh3D2" type="CSGMesh3D" parent="Teleport4"]
transform = Transform3D(-0.707107, 0, 0.707107, 0, 1, 0, -0.707107, 0, -0.707107, 10, 4, -4)
mesh = SubResource("TextMesh_3rjm6")
